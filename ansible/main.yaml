---
- hosts: localhost
  connection: local
  vars_files:
     - vars/homebrew.yaml
     - vars/vscode-plugins.yaml
     - vars/terraform.yaml
  vars:
    - user_name: "{{ ansible_user_id }}"
  tasks:
    - name: Install Rosetta
      shell:
        cmd: /usr/sbin/softwareupdate --install-rosetta --agree-to-license
      when: ansible_machine == 'arm64'
    - name: Install Homebrew packages
      import_role:
        name: geerlingguy.mac.homebrew
      environment:
        PATH: '{{homebrew_install_path}}/bin:{{ ansible_env.PATH }}'
      tags:
        - homebrew
    - name: Setup OSX install environment
      import_role:
        name: osx
      tags:
        - always
    - name: Install Obsidian
      import_role:
        name: './vendor/osx/osx/roles/installer'
      vars:
        app_name: Obsidian
        app_url: https://github.com/obsidianmd/obsidian-releases/releases/download/v0.11.0/Obsidian-0.11.0-universal.dmg
        installer_type: app
        install_method: dmg
        download_file_type: dmg
      tags:
        - obsidian

    - name: Install VS Code plugins
      block:
        - name: Set Code binary location
          set_fact:
            code_binary_path: "{{ homebrew_install_path }}/bin/code"
            code_app_path: "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code"
        - name: Symlink Code binary
          file:
            src: "{{ code_app_path }}"
            dest: "{{ code_binary_path }}"
            state: link
        - name: Install VS Code extensions
          shell:
            cmd: "{{ code_binary_path }} --install-extension {{ item.name | default(item) }}"
          loop: "{{ vscode_plugins }}"
      tags:
        - vscode-ext
        - vscode
    - name: Configure Repo folders
      file:
        state: directory
        path: ~/repos
      tags:
        - folder
    - name: Configure VS Code Snippets
      block:
        - name: Set Code support files location
          set_fact:
            code_app_support_path: "~/Library/Application Support/Code"
            snippets_repo_path: "~/repos/vscode-snippets"
        - name: Check out Git repo
          git:
            repo: https://github.com/yardbirdsax/vscode-snippets
            dest: "{{ snippets_repo_path }}"
            update: true
        - name: Delete existing folder
          file:
            path: "{{ code_app_support_path }}/User/snippets"
            state: absent
        - name: Link the folder
          file:
            state: link
            src: "{{ snippets_repo_path }}"
            dest: "{{ code_app_support_path }}/User/snippets"
      tags:
        - vscode-snippets
    - name: Install and configure oh-my-zsh
      import_role:
        name: gantsign.oh-my-zsh
      vars:
        users:
          - username: "{{ user_name }}"
            oh_my_zsh:
              plugins:
                - git
                - kube-ps1
                - vscode
                - docker
                - docker-compose
      tags:
        - oh-my-zsh
    - name: "Create zsh profile file"
      file:
        path: ~{{ console_user | default(user_name) }}/.zshrc
        state: touch
    
    - name: "Add Homebrew to PATH"
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        line: "{{ item.line }}"
        insertafter: "{{ item.after }}"
        state: present
      with_items:
        - after: EOF
          line: "export PATH={{homebrew_install_path}}/bin:$PATH"
      tags:
        - homebrew_path
        
    - name: "Add Kube_PS1 to zsh profile"
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        line: "source $(brew --prefix kube-ps1)/share/kube-ps1.sh"
        state: present
    - name: "Add GOPATH to zsh profile"
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        line: "{{ item.line }}"
        insertafter: "{{ item.after }}"
        state: present
      with_items:
        - after: EOF
          line: "export GOPATH=$HOME/go"
        - after: "export GOPATH=$HOME/go"
          line: "export PATH=$PATH:$GOPATH/bin"
    - name: "Configure ZSH key bindings"
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        line: "{{ item.line }}"
        state: present
      with_items:
        - line: "bindkey '[C' forward-word"
        - line: "bindkey '[D' backward-word"
      tags:
        - zsh
    - name: "Add asdf to .zshrc"
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        line: ". $(brew --prefix asdf)/libexec/asdf.sh"
        state: present
      tags:
        - asdf
    - name: install Krew
      tags:
        - krew
      block:
        - name: download and install Krew
          ansible.builtin.shell:
            cmd: |
              (
                set -x; cd "$(mktemp -d)" &&
                OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
                ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
                KREW="krew-${OS}_${ARCH}" &&
                curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
                tar zxvf "${KREW}.tar.gz" &&
                ./"${KREW}" install krew
              )
        - name: add Krew install path to PATH
          lineinfile:
            dest: ~{{ console_user | default(user_name) }}/.zshrc
            line: export PATH="${KREW_ROOT:-$HOME}/.krew/bin:$PATH"
            state: present

    - name: Install and configure Poetry
      import_tasks: ./tasks/install-poetry.yaml
      tags:
        - poetry
    
    - name: Configure VS Code as default editor
      lineinfile:
        dest: ~{{ console_user | default(user_name) }}/.zshrc
        insertafter: EOF
        line: export EDITOR="code --wait"
        regexp: export EDITOR
        state: present
      tags:
        - vscode
    
    - name: Setup ZSH Aliases
      import_tasks: ./tasks/setup-aliases.yaml
      tags:
        - aliases

    - name: Say All Done!
      osx_say:
        msg: "ALL DONE!"